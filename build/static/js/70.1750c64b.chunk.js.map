{"version":3,"file":"static/js/70.1750c64b.chunk.js","mappings":"qSAEO,SAASA,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,GAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,SAAvD,I,SCHMC,EAAY,CAAC,YAAa,UAoB1BC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,EAAO,CAC7BC,KAAM,UACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOC,IAAI,GAHlCN,EAId,WACD,MAAO,CACLO,SAAU,SAEd,IAsDA,EArD0BC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,IAAMN,GAAQO,EAAAA,EAAAA,GAAc,CAC1BP,MAAOK,EACPP,KAAM,YAGJU,EAEER,EAFFQ,UAAS,EAEPR,EADFS,OAAAA,OAAM,IAAG,GAAK,EAEhBC,GAAQC,EAAAA,EAAAA,GAA8BX,EAAON,GACzCkB,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGb,EAAO,CACrCS,OAAAA,IAEIK,EA/BkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZb,KAAM,CAAC,SAEoBZ,EAAqBwB,EACpD,CAuBkBE,CAAkBJ,GAClC,OAAoBK,EAAAA,EAAAA,KAAKtB,GAAUkB,EAAAA,EAAAA,GAAS,CAC1CL,WAAWU,EAAAA,EAAAA,GAAKJ,EAAQZ,KAAMM,GAC9BW,UAAWV,EAAS,OAAIW,EACxBd,IAAKA,EACLM,WAAYA,GACXF,GACL,I,oBCfA,G,QA9BkB,WAChB,IAAMW,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,SAAS,IAExD,OADAG,QAAQC,IAAIJ,IAEV,iCACE,SAACK,EAAA,EAAM,KACP,SAACC,EAAA,EAAG,CAACnB,UAAU,iBAAgB,SAC5Ba,EAAUO,KAAI,SAACC,EAAOC,GAAC,OAItB,UAAC,EAAI,CAAStB,UAAU,OAAM,WAC5B,wBAAKqB,EAAM,cACX,4BACE,0BAAI,QAAMA,EAAM,eAChB,0BAAI,UAAQA,EAAM,oBAEpB,iBAAKrB,UAAU,OAAM,WACnB,yBAAG,QAAK,UAAIqB,EAAM,iBAAgB,YAAIA,EAAM,oBAC5C,yBAAG,SACK,UAAIA,EAAM,kBAAiB,YAAIA,EAAM,wBATtCC,EAYJ,QAKjB,E,8JCiBA,EA5Ce,WACb,OAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAM1BC,EAAc,WAClBD,GAAc,EAChB,EAEA,OACE,iCACE,UAACN,EAAA,EAAG,CAACnB,UAAU,WAAU,WACvB,wBAAI,SACJ,iBAAKA,UAAU,WAAU,WACvB,SAAC,KAAI,CAAC2B,GAAG,IAAG,SAAC,UACb,SAAC,KAAI,CAACA,GAAG,cAAa,SAAC,eACvB,SAACC,EAAA,EAAM,QAET,gBAAK5B,UAAU,WAAU,UACvB,SAAC6B,EAAA,EAAU,CAACC,QAlBK,WACvBL,GAAc,EAChB,EAgB8C,UACpC,SAACM,EAAA,EAAQ,CAACC,SAAS,QAAQC,GAAI,CAAEC,MAAO,mBAI9C,UAACC,EAAA,GAAM,CACLC,OAAO,QACPC,KAAMb,EACNc,QAASZ,EACT1B,UAAU,SAAQ,WAElB,gBAAKA,UAAU,aAAY,UACzB,SAACuC,EAAA,EAAgB,CAACT,QAASJ,OAE7B,iBAAK1B,UAAU,cAAa,WAC1B,SAAC,KAAI,CAAC2B,GAAG,IAAG,SAAC,UACb,SAAC,KAAI,CAACA,GAAG,aAAY,SAAC,sBAKhC,C","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","components/main/WatchList.js","components/nav/Navbar.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { Box, Card } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navbar from \"../nav/Navbar\";\r\nimport \"../../styles/main.css\";\r\n\r\nconst WatchList = () => {\r\n  const watchlist = useSelector((state) => state.watchlist);\r\n  console.log(watchlist);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Box className=\"watchlist-main\">\r\n        {watchlist.map((stock, i) => (\r\n          // <li key={stock[\"1. symbol\"]}>\r\n          //   {stock[\"2. name\"]} - {stock[\"5. marketPrice\"]}\r\n          // </li>\r\n          <Card key={i} className=\"card\">\r\n            <h1>{stock[\"2. name\"]}</h1>\r\n            <div>\r\n              <h2>Type:{stock[\"3. type\"]}</h2>\r\n              <h2>Region:{stock[\"4. region\"]}</h2>\r\n            </div>\r\n            <div className=\"time\">\r\n              <p>Open:{`${stock[\"5. marketOpen\"]} ${stock[\"7. timezone\"]}`}</p>\r\n              <p>\r\n                Close:{`${stock[\"6. marketClose\"]} ${stock[\"7. timezone\"]}`}\r\n              </p>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WatchList;\r\n","import React, { useState } from \"react\";\r\nimport { Avatar, Box, Drawer, IconButton } from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport \"../../styles/navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  const handleOpenDrawer = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    setOpenDrawer(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"nav-main\">\r\n        <h1>GPM</h1>\r\n        <div className=\"nav-list\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/watch-list\">WatchList</Link>\r\n          <Avatar />\r\n        </div>\r\n        <div className=\"menuIcon\">\r\n          <IconButton onClick={handleOpenDrawer}>\r\n            <MenuIcon fontSize=\"large\" sx={{ color: \"white\" }} />\r\n          </IconButton>\r\n        </div>\r\n      </Box>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openDrawer}\r\n        onClose={closeDrawer}\r\n        className=\"drawer\"\r\n      >\r\n        <div className=\"drawerIcon\">\r\n          <ChevronRightIcon onClick={closeDrawer} />\r\n        </div>\r\n        <div className=\"drawer-list\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"watch-list\">WatchList</Link>\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","watchlist","useSelector","state","console","log","Navbar","Box","map","stock","i","useState","openDrawer","setOpenDrawer","closeDrawer","to","Avatar","IconButton","onClick","Menu","fontSize","sx","color","Drawer","anchor","open","onClose","ChevronRight"],"sourceRoot":""}